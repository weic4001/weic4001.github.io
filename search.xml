<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter 动态webp瀑布流内存优化</title>
      <link href="/2021/12/08/flutter-dong-tai-webp-pu-bu-liu-nei-cun-you-hua/"/>
      <url>/2021/12/08/flutter-dong-tai-webp-pu-bu-liu-nei-cun-you-hua/</url>
      
        <content type="html"><![CDATA[<p>使用Flutter框架开发APP，若想实现多列瀑布流，可以使用<a href="https://flutterchina.club/tutorials/layout/?ivk_sa=1024320u#gridview">GridView</a>；对于内容不规则的多列瀑布流，可以使用<a href="https://pub.dev/packages/flutter_staggered_grid_view">flutter_staggered_grid_view</a>。</p><p>在一个如下图的业务场景中：</p><p><img src="%E7%80%91%E5%B8%83%E6%B5%81.png" alt="瀑布流"></p><p>图中每一个Item都是一个动态Webp，整个列表长度可能在几十到上百。由于列表是正方形、长方形混排，考虑使用<a href="https://pub.dev/packages/flutter_staggered_grid_view">flutter_staggered_grid_view</a>实现。Webp展示采用著名的<a href="https://pub.dev/packages/cached_network_image">cached_network_image</a>。</p><p>页面功能实现后，进入页面，列表头几个Webp播放非常顺畅，列表上下滑动后，Webp的播放非常的卡顿，页面渲染帧率远低于预期，基于操作过程及表现，怀疑是内存方面导致该问题。使用Android Studio Profiler分析内存后发现，在列表发生滑动后，Graphics部分存在持续不断的GC和Allocate：</p><p><img src="%E4%BC%98%E5%8C%96%E5%89%8D%E5%86%85%E5%AD%98.png" alt="优化前内存"></p><p>而Graphics部分内存是图形缓冲区队列为向屏幕显示像素（包括 GL 表面、GL 纹理等等）所使用的内存。</p><p>考虑到卡顿现象随着列表滑动的增多愈发严重的现象，进一步怀疑列表的Widget Item没有被释放回收，在Item Widget中增加Log:</p><pre class="line-numbers language-dart" data-language="dart"><code class="language-dart"><span class="token metadata symbol">@override</span><span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    developer<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Home Item Widget dispose = ${toString()}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token metadata symbol">@override</span><span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    developer<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Home Item Widget initState = ${toString()}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过log发现，验证了上述猜测。</p><p>查看列表的代码实现</p><pre class="line-numbers language-dart" data-language="dart"><code class="language-dart"><span class="token metadata symbol">@override</span><span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token class-name">Padding</span><span class="token punctuation">(</span>      padding<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">fromLTRB</span><span class="token punctuation">(</span><span class="token number">8.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">11.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      child<span class="token punctuation">:</span> <span class="token class-name">StaggeredGridView</span><span class="token punctuation">.</span><span class="token function">countBuilder</span><span class="token punctuation">(</span>        crossAxisCount<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>        mainAxisSpacing<span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">,</span>        crossAxisSpacing<span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span>        itemCount<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>templates<span class="token punctuation">.</span>length<span class="token punctuation">,</span>        itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_createItemWidget</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>        staggeredTileBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">StaggeredTile</span><span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并未发现明显的问题。</p><p>翻阅<a href="https://pub.dev/packages/flutter_staggered_grid_view">flutter_staggered_grid_view</a>的文档，发现在其包含一个属性</p><pre class="line-numbers language-dart" data-language="dart"><code class="language-dart"><span class="token comment">/// Whether to add keepAlives to children</span><span class="token keyword">final</span> bool addAutomaticKeepAlives<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>默认值为true，其作用为将Item的Widget使用AutomaticKeepAlive进行包裹，即使Item已滑出屏幕外，也保留其状态，不会释放其内存对象。</p><p>将其设置为false后，即使多次滑动，内存表现很平稳,频繁GC和Allocate问题消失，列表webp的渲染性能提升明显。</p><p><img src="%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96%E5%90%8E.png" alt="内存优化后"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li><strong>addAutomaticKeepAlives</strong> 是否设置为false，需要根据业务场景选择。<br>在上文中的业务场景，动态Webp有30帧，视觉感受接近视频，图片的解析、渲染对内存需求很大，此时再保存Widget的状态不合适。如果列表数据有限，Widget比较简单，可以设置为true，有利于减少Widget的渲染时间，提升体验。</li></ol><ol start="2"><li><p>关于列表体验优化的其他小点：</p><ol><li>可以设置<a href="https://api.flutter.dev/flutter/widgets/ListView/ListView.html">addRepaintBoundaries</a>,减少不必要的渲染。</li><li>Widget尽量使用const修饰词</li></ol></li><li><p>阅读源码、文档，熟悉Widget的特性，使用方式，对于提升开发效率，工程质量至关重要。<del>先实现后优化的思路，并不可靠</del>，因为需求总会有，用于开发的时间总是不够用。</p></li></ol><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ol><li><a href="https://api.flutter.dev/flutter/widgets/SliverChildBuilderDelegate/addAutomaticKeepAlives.html">addAutomaticKeepAlives</a></li><li><a href="https://developer.android.com/studio/profile/memory-profiler">Inspect your app’s memory usage with Memory Profiler</a></li><li><a href="https://api.flutter.dev/flutter/widgets/ListView-class.html">ListView</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Flutter 性能优化 瀑布流 列表 GridView </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
